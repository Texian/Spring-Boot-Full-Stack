package com.packt.cardatabase.domain;

import javax.persistence.*;
import java.util.Set;

@Entity
public class Car {
    @Id //Denotes primary key
    @GeneratedValue(strategy=GenerationType.AUTO) //Denotes that the id is auto-generated by the database
    private long id;
    private String make, model, color, vin;
    private int year, price;

    public Car() {} //Initialization

    public Car(String make, String model, String color, String vin, int year, int price, Owner owner){ //Constructor
        super();
        this.make = make;
        this.model = model;
        this.color = color;
        this.vin = vin;
        this.year = year;
        this.price = price;
        this.owner = owner;
    }

    public String getMake(){
        return make;
    }
    public void setMake(String make){ this.make = make; }

    public String getModel(){
        return model;
    }
    public void setModel(String model){
        this.model = model;
    }

    public String getColor(){
        return color;
    }
    public void setColor(String color){
        this.color = color;
    }

    public String getVin(){
        return vin;
    }
    public void setVin(String vin){
        this.vin = vin;
    }

    public int getYear(){
        return year;
    }
    public void setYear(int year){ this.year = year; }

    public int getPrice(){
        return price;
    }
    public void setPrice(int price){
        this.price = price;
    }

//    @ManyToOne(fetch = FetchType.LAZY)
//    //Many cars to One owner
//    //Lazy: when owner is fetched, all associated cars are fetched when needed.
//    //Eager: fetches all cars at the same time as the owner
//    @JoinColumn(name = "owner")
//    private Owner owner;
//
//    public Owner getOwner() { return owner; }
//    public void setOwner(Owner owner) { this.owner = owner; }

    @ManyToMany(mappedBy = "cars")
    private Set<Owner> owners; //When using ManyToMany, use Set instead of List

    public Set<Owner> getOwners(){ return owners; }
    public void setOwners(Set<Owner> owners){ this.owners = owners; }
}
